// js/views/resourceView.js
export default class ResourceView {
  constructor() {
    this.currencyContainer = document.getElementById("currencies-container");
    this.statPoolsContainer = document.getElementById("stat-pools-container");

    if (!this.currencyContainer) {
      console.error("[Everlyn] Missing #currencies-container in DOM.");
      document.body.insertAdjacentHTML(
        "beforeend",
        `<pre style="color:red;">Missing #currencies-container in DOM.</pre>`
      );
    }
    if (!this.statPoolsContainer) {
      console.error("[Everlyn] Missing #stat-pools-container in DOM.");
      document.body.insertAdjacentHTML(
        "beforeend",
        `<pre style="color:red;">Missing #stat-pools-container in DOM.</pre>`
      );
    }
  }

  update(state, defs) {
    if (!state || !defs) return;

    const resources = state.resources ? Object.values(state.resources) : [];
    
    const unlocked = resources.filter((r) => r.unlocked === true);

    const currencies = unlocked.filter((r) => defs.resources[r.id].type === "currency");
 
    const statPools = unlocked.filter((r) => defs.resources[r.id].type === "stat");

    if (this.currencyContainer) {
      this.currencyContainer.innerHTML = '';
      currencies.forEach((r) => {
        const div = document.createElement('div');
        div.className = 'currency';

        // Name
        const nameSpan = document.createElement('span');
        nameSpan.className = 'currency-name';
        nameSpan.textContent = defs.resources?.[r.id]?.name ?? r.id;
        div.appendChild(nameSpan);

        // Amount/Maximum
        const amountSpan = document.createElement('span');
        amountSpan.className = 'currency-amount';
        amountSpan.textContent = `: ${r.amount}/${r.maximum}`;
        div.appendChild(amountSpan);

        // Tooltip
        const rateSpan = document.createElement('span');
        rateSpan.className = 'currency-rate';
        rateSpan.title = `Rate: ${r.changePerTick ?? 0}\n${defs.resources?.[r.id]?.description ?? ''}`;
        rateSpan.textContent = ' ⓘ';
        div.appendChild(rateSpan);

        this.currencyContainer.appendChild(div);
      });
    }

    // Generated by Copilot
    if (this.statPoolsContainer) {
      this.statPoolsContainer.innerHTML = '';
      statPools.forEach((r) => {
        const div = document.createElement('div');
        div.className = 'stat-pool';

        // Name
        const nameSpan = document.createElement('span');
        nameSpan.className = 'stat-name';
        nameSpan.textContent = defs.resources?.[r.id]?.name ?? r.id;
        div.appendChild(nameSpan);
        
        // Tooltip
        const rateSpan = document.createElement('span');
        rateSpan.className = 'stat-rate';
        rateSpan.title = `Rate: ${r.changePerTick ?? 0}\n${defs.resources?.[r.id]?.description ?? ''}`;
        rateSpan.textContent = ' ⓘ';
        div.appendChild(rateSpan);

        // Progress bar container
        const progressContainer = document.createElement('div');
        progressContainer.className = 'progress-container';

        // Progress bar
        const progressBar = document.createElement('div');
        progressBar.className = `progress-bar progress-${r.id}`;
        const percent = r.maximum > 0 ? Math.min(100, (r.amount / r.maximum) * 100) : 0;
        progressBar.style.width = `${percent}%`;

        // Amount/Maximum text
        const amountSpan = document.createElement('span');
        amountSpan.className = 'stat-amount';
        amountSpan.textContent = `${r.amount}/${r.maximum}`;
        progressBar.appendChild(amountSpan);

        progressContainer.appendChild(progressBar);
        div.appendChild(progressContainer);        

        this.statPoolsContainer.appendChild(div);
      });
    }
  }
}